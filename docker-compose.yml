version: "3.9"
services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports: [ "5432:5432" ]
    volumes: [ "pgdata:/var/lib/postgresql/data" ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgbouncer:
    image: bitnami/pgbouncer:1
    environment:
      PGBOUNCER_DATABASES: "app=host=postgres port=5432 dbname=postgres"
    volumes:
      - ./infrastructure/pgbouncer.ini:/opt/bitnami/pgbouncer/conf/pgbouncer.ini:ro
    depends_on: [ postgres ]
    ports: [ "6432:6432" ]

  redis:
    image: redis:7
    restart: unless-stopped
    ports: [ "6379:6379" ]

  minio:
    image: minio/minio:RELEASE.2024-10-13T00-00-00Z
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports: [ "9000:9000", "9001:9001" ]
    volumes: [ "minio:/data" ]

  api:
    build: ./BackEnd/api
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgres://postgres:postgres@pgbouncer:6432/postgres"
      JWT_ACCESS_SECRET: "dev_access"
      JWT_REFRESH_SECRET: "dev_refresh"
      S3_ENDPOINT: "http://minio:9000"
      S3_BUCKET: "devforge"
      S3_REGION: "us-east-1"
      S3_ACCESS_KEY: "minio"
      S3_SECRET_KEY: "minio123"
      NODE_ENV: "development"
      SENTRY_DSN: ""  # Add your Sentry DSN for error tracking
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    ports: [ "8080:8080" ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  mailhog:
    image: mailhog/mailhog
    restart: unless-stopped
    ports: [ "8025:8025" ]

volumes: { pgdata: {}, minio: {} }